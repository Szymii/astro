{
  // Configuration for JavaScript files
  "extends": [
    "plugin:prettier/recommended",
    "plugin:import/recommended"
  ],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ]
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "extraFileExtensions": [
      ".astro"
    ] // This is a required setting in `@typescript-eslint/parser` v5.
  },
  "overrides": [
    // Configuration for mjs,cjs files
    {
      "files": [
        "*.mjs",
        "*.cjs"
      ],
      "extends": [
        "plugin:prettier/recommended"
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off", // mjs is only used by Astro for configuration, false positive
        "import/no-unresolved": "off" // Also false positive with mjs file
      }
    },
    // Configuration for TypeScript files
    {
      "parser": "@typescript-eslint/parser",
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "plugins": [
        "@typescript-eslint",
        "react"
      ],
      "extends": [
        "airbnb-typescript",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "@typescript-eslint/no-use-before-define": "off",
        "import/extensions": [
          "error",
          "ignorePackages",
          {
            "js": "never",
            "jsx": "never",
            "ts": "never",
            "tsx": "never",
            "": "never"
          }
        ], // Avoid missing file extension errors when using '@/' alias
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "@typescript-eslint/no-unused-vars": "off",
        "import/prefer-default-export": "off" // Named export is easier to refactor automatically
      }
    },
    // Configuration for Astro
    {
      "files": [
        "*.astro"
      ],
      "plugins": [
        "@typescript-eslint",
        "react"
      ],
      "extends": [
        "airbnb-typescript",
        "plugin:prettier/recommended"
      ],
      "parser": "astro-eslint-parser",
      "parserOptions": {
        "parser": "@typescript-eslint/parser"
      },
      "rules": {
        "import/extensions": [
          "error",
          "ignorePackages",
          {
            "js": "never",
            "jsx": "never",
            "ts": "never",
            "tsx": "never",
            "": "never"
          }
        ], // Avoid missing file extension errors in .astro files
        "import/no-unresolved": [
          "error",
          {
            "ignore": [
              "@/*"
            ]
          }
        ], // Disable no-unresolved rule for .astro files
        "react/jsx-filename-extension": [
          1,
          {
            "extensions": [
              ".astro"
            ]
          }
        ], // Accept jsx in astro files
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "@typescript-eslint/no-unused-vars": "off",
        "import/prefer-default-export": "off" // Named export is easier to refactor automatically
      },
      "globals": {
        "Astro": "readonly"
      }
    }
  ]
}